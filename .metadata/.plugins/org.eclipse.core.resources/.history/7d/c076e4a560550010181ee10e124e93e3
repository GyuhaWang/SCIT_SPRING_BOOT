package net.dsa.web3.service;

import org.springframework.stereotype.Service;

import jakarta.transaction.Transactional;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
import net.dsa.web3.entity.MemberEntity;
import net.dsa.web3.repository.MemberRepository;

@Service
@Slf4j
@Transactional
/*
 * @Transactional
 * 	-메서드나 클래스에 적용, 해당 메서드가 호출 될 때 트렌젝션 시작,
 * 	-메서드가 완료되면 commit,
 * 	-예외(error)가 발생하면 rollback,
 * 	-해당 어노테이션은 public 메서드 에서만 적용됨
 * 	-class 에 붙이면 class 내의 모든 메서드가 Transaction 적용됨
 * */
// @Transactional -> 그러면 그동안은 서버가 다른 일을 못하는 건가??
@RequiredArgsConstructor
public class MemberServiceImpl implements MemberService{
	
	private final MemberRepository mr;

	@Override
	public void insertData() {
		// builder 사용
		MemberEntity m = MemberEntity.builder()
				.id("bbb")
				.pw("123")
				.name("고길동")
				.phone("010-1234-1234")
				.address("서울특별시 강남구")
				.build();
		
		mr.save(null);
		
	}
	
}
